# Object oriented programming

Classes are templates to create objects.

- data
- methods (functions that belongs classes, most of the time uses data in the object)

Everything in python is an object.
To find a methods of an object use **dir** function

```python
type("")
dir("")


type("")
dir(1)
```



## Define new classes Minimal example

```{.python include="./Ornekler/Person0.py"}
```




## Define new classes: constructor


```{.python include="./Ornekler/Person1.py"}
```


## Define new classes: instance method

```{.python include="./Ornekler/Person2.py"}
```

## Special methods

- python classes have special methods that start and end with \_\_.
- \_\_init\_\_ constructor method for initializing objects
- \_\_str\_\_  a method when object converted to string, for example in print() function.

## override str method


```{.python include="./Ornekler/Person3.py"}
```


## Links in our references

- [Non-Programmer's Tutorial for Python 3/Intro to Object Oriented Programming in Python 3](https://en.wikibooks.org/wiki/Non-Programmer%27s_Tutorial_for_Python_3/Intro_to_Object_Oriented_Programming_in_Python_3)
- [Classes in Python 101](https://python101.pythonlibrary.org/chapter11_classes.html)
- [Python Classes and Objects in w3schools.com](https://www.w3schools.com/python/python_classes.asp)

## Video Tutorials

TODO
